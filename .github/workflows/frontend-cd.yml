name: frontend-cd-workflow

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  lint-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
      - name: Install dependencies
        run: cd ./starter/frontend && npm ci

      - name: Runs linting
        run: cd ./starter/frontend && npm run lint -- --fix

  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
      - name: Install dependencies
        run: cd ./starter/frontend && npm ci

      - name: Runs test
        run: cd ./starter/frontend && npm run test

  build-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          cd ./starter/frontend && docker build -t haqh310/movie-frontend:${{ github.sha }} .

      - name: Push docker image
        run : |
          cd ./starter/frontend && docker push haqh310/movie-frontend:${{ github.sha }}

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1 
              
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag Docker image
        run: |
          docker tag haqh310/movie-frontend:${{ github.sha }} <your-account-id>.dkr.ecr.<region>.amazonaws.com/your-repo-name:latest

      - name: Push Docker image to ECR
        run: |
          docker push <your-account-id>.dkr.ecr.<region>.amazonaws.com/your-repo-name:latest

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f starter/frontend/k8s

name: backend-cd-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  lint-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install pipenv
        run: pip install pipenv 

      - name: Install dependencies
        run: | 
          cd ./starter/backend
          pipenv install --dev

      - name: Runs linting
        run: cd ./starter/backend && pipenv run lint

  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: | 
          cd ./starter/backend 
          pipenv install --dev

      - name: Runs testing
        run: cd ./starter/backend && pipenv run test

  build-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          cd ./starter/backend && docker build -t haqh310/movie-backend:${{ github.sha }} .

      - name: Push docker image
        run: |
          cd ./starter/frontend && docker push haqh310/movie-frontend:${{ github.sha }}

      - name: Login to AWS
        uses : aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: us-east-1 

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image to ECR
        env:
          ECR_REGISTRY: 495761688630.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd starter/backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Update image in Kustomization
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 

      - name: Kustomize build and deploy to Kubernetes
        run: |
          cd starter/backend/k8s
          kustomize build | kubectl apply -f . -validate=false
  
      